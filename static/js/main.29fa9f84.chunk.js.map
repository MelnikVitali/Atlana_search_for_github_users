{"version":3,"sources":["configs/gitHubConfigs.js","configs/APIUrls.js","store/usersReducers.js","store/index.js","utils/pxToRem.js","theme.js","components/Header/styles.js","components/Header/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/UsersScreen/styles.js","components/UsersScreen/index.js","components/ReposItem/styles.js","components/ReposItem/index.js","components/CurrentUserScreen/styles.js","components/CurrentUserScreen/index.js","components/ScreenContainer/styles.js","components/ScreenContainer/index.js","App.js","index.js"],"names":["gitHubConfigs","process","APIUrls","baseURL","searchUsers","searchUser","gitHubQuerySettingsUsers","gitHubQuerySettingsRepos","usersSlice","createSlice","name","initialState","loading","error","queriedUsers","isCurrentUsers","currentUser","isCurrentUserRepos","isOpenDisplayUser","users","reducers","startLoading","state","getUsersSuccess","payload","errorMessage","getCurrentUsersSuccess","newUsers","reduce","acc","item","login","user","repos","getCurrentUserReposSuccess","length","getCurrentUser","getError","clearResults","toggleDisplayCurrentUser","actions","usersSelector","rootReducer","combineReducers","usersReducer","store","configureStore","reducer","devTools","devToolsEnhancer","realtime","pxToRem","value","theme","createTheme","typography","fontFamily","join","backgroundColorMessageWrap","backgroundColorOwnerWindow","colorTimeChat","overrides","MuiCssBaseline","boxSizing","width","height","outline","body","margin","minHeight","a","textDecoration","MuiFormLabel","root","color","asterisk","display","MuiFormHelperText","position","bottom","left","MuiInputBase","MuiButton","textTransform","fontSize","outlined","border","MuiOutlinedInput","notchedOutline","top","useStyles","makeStyles","marginTop","spacing","marginBottom","alignItems","toolBar","menuButton","paddingLeft","Header","classes","AppBar","className","Toolbar","IconButton","size","edge","Typography","component","variant","require","paper","backgroundColor","palette","background","default","gridContainer","padding","large","userName","textAlign","preloader","float","UserItem","handleDisplayCurrentUser","useSelector","Paper","Button","fullWidth","onClick","Grid","container","xs","sm","md","Avatar","alt","src","avatar_url","noWrap","public_repos","marginRight","flexGrow","titleContainer","flexWrap","title","fontWeight","letterSpacing","searchContainer","breakpoints","down","paddingRight","searchBar","right","UsersScreen","dispatch","useDispatch","useState","query","setQuery","debouncedChangeHandler","useCallback","debounce","searchParams","nextValue","trim","axios","get","response","data","items","toast","message","cancelSearch","useEffect","getUsers","currentUsers","Object","entries","hasOwnProperty","Promise","all","then","fetchCurrentUsers","cancel","fetchCurrentUserRepos","elevation","direction","align","gutterBottom","onChange","newValue","placeholder","onCancelSearch","onRequestSearch","LinearProgress","map","userLogin","id","link","ReposItem","repo","Link","href","html_url","underline","justifyContent","forks_count","stargazers_count","containerUser","overflow","bio","reposContainer","CurrentUserScreen","setValue","dbValue","saveToDb","filteredRepos","filter","toLowerCase","includes","debouncedSave","email","location","created_at","toLocaleString","slice","followers","following","handleChange","minWidth","ScreenContainer","App","AOS","init","offset","duration","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.29fa9f84.chunk.js","sourcesContent":["export const gitHubConfigs = {\r\n    githubClientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\r\n    githubClientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET\r\n};\r\n","import { gitHubConfigs } from './gitHubConfigs';\r\n\r\nexport const APIUrls = {\r\n    baseURL: `https://api.github.com/`,\r\n    searchUsers: `https://api.github.com/search/users?q=`,\r\n    searchUser: `https://api.github.com/users/`,\r\n    gitHubQuerySettingsUsers: `client_id=${gitHubConfigs.githubClientId}&client_secret=${gitHubConfigs.githubClientSecret}&per_page=2`,\r\n    gitHubQuerySettingsRepos: `/repos?type=all&sort=updated&$client_id=${gitHubConfigs.githubClientId}&client_secret=${gitHubConfigs.githubClientSecret}&per_page=300`\r\n};\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { APIUrls } from '../configs/APIUrls';\r\n\r\nexport const initialState = {\r\n    loading: false,\r\n    error: null,\r\n    queriedUsers: [],\r\n    isCurrentUsers: false,\r\n    currentUser: null,\r\n    isCurrentUserRepos: false,\r\n    isOpenDisplayUser: false,\r\n    users: {}\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState,\r\n    reducers: {\r\n        startLoading: state => {\r\n            state.loading = true;\r\n        },\r\n        getUsersSuccess: (state, {payload}) => {\r\n            state.queriedUsers = payload;\r\n            state.isOpenDisplayUser = false;\r\n            state.isCurrentUsers = false;\r\n            state.loading = false;\r\n            state.errorMessage = null;\r\n        },\r\n        getCurrentUsersSuccess: (state, {payload}) => {\r\n            const newUsers = payload.reduce((acc, item) => {\r\n                acc[item.login] = {user: item, repos: []}\r\n                return acc;\r\n            }, {});\r\n\r\n            state.users = {...state.users, ...newUsers};\r\n            state.isOpenDisplayUser = false;\r\n            state.loading = false;\r\n            state.isCurrentUsers = true;\r\n            state.error = null;\r\n        },\r\n        // getCurrentUserSuccess: (state, {payload}) => {\r\n        //     state.users = {\r\n        //         ...state.users,\r\n        //         [payload.login]: {\r\n        //             user: {\r\n        //                 ...payload\r\n        //             },\r\n        //             repos: []\r\n        //         }\r\n        //     };\r\n        //     state.loading = false;\r\n        //     state.error = null;\r\n        // },\r\n        getCurrentUserReposSuccess: (state, {payload: {repos, login}}) => {\r\n            if (repos.length === 0) {\r\n                state.users[login].repos = null;\r\n            } else {\r\n                state.users[login].repos = repos;\r\n            }\r\n\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.isOpenDisplayUser = true;\r\n            state.isCurrentUserRepos = true;\r\n            state.currentUser = login;\r\n        },\r\n\r\n        getCurrentUser: (state, {payload}) => {\r\n            state.currentUser = payload;\r\n            state.isCurrentUsers = true;\r\n        },\r\n        getError: (state, {payload}) => {\r\n            state.loading = false;\r\n            state.error = payload;\r\n        },\r\n        clearResults: state => {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.queriedUsers = [];\r\n            state.isCurrentUsers = false;\r\n            state.isCurrentUserRepos = false;\r\n            state.isOpenDisplayUser = false;\r\n        },\r\n        toggleDisplayCurrentUser: (state, {payload}) => {\r\n            if (payload) {\r\n                state.isOpenDisplayUser = payload\r\n            } else {\r\n                state.isCurrentUsers = false;\r\n                state.currentUser = null;\r\n                state.isCurrentUserRepos = false;\r\n                state.isOpenDisplayUser = false;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    startLoading,\r\n    getUsersSuccess,\r\n    getCurrentUsersSuccess,\r\n    getCurrentUser,\r\n    // getCurrentUserSuccess,\r\n    getCurrentUserReposSuccess,\r\n    getError,\r\n    clearResults,\r\n    toggleDisplayCurrentUser\r\n} = usersSlice.actions;\r\n\r\nexport const usersSelector = state => state.users;\r\n\r\nexport default usersSlice.reducer;\r\n\r\nexport const fetchQueriedUsers = (searchParams) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n        try {\r\n            const response = await axios.get(`${APIUrls.searchUsers}${searchParams}&${APIUrls.gitHubQuerySettingsUsers}`);\r\n\r\n            if (response) {\r\n                dispatch(getUsersSuccess(response.data.items));\r\n            }\r\n        } catch (error) {\r\n            toast.error(error?.message);\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const fetchCurrentUsers = (queriedUsers, users) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n\r\n        try {\r\n            const getUsers = async (queriedUsers, users) => {\r\n                let currentUsers = [];\r\n\r\n                for (let user of queriedUsers) {\r\n                    if (Object.entries(users).length === 0 || !(users.hasOwnProperty(user.login))) {\r\n                        const response = await axios.get(`${APIUrls.searchUser}${user.login}?${APIUrls.gitHubQuerySettingsUsers}`);\r\n\r\n                        currentUsers = [...currentUsers, response.data];\r\n                    }\r\n                }\r\n\r\n                return await Promise.all(currentUsers);\r\n            };\r\n\r\n            await getUsers(queriedUsers, users).then(data => dispatch(getCurrentUsersSuccess(data)));\r\n        } catch (error) {\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchCurrentUserRepos = (login, users) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n\r\n        try {\r\n            if ((users[login].repos && users[login].repos.length === 0) || !(users.hasOwnProperty(login))) {\r\n                const response = await axios.get(`${APIUrls.searchUser}${login}${APIUrls.gitHubQuerySettingsRepos}`);\r\n\r\n                if (response) {\r\n                    await dispatch(getCurrentUserReposSuccess({login, repos: response.data}));\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            toast.error(error?.message);\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nimport usersReducer from './usersReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersReducer,\r\n});\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools:[ devToolsEnhancer({ realtime: true }) ]\r\n});\r\n","export const pxToRem = (value) => {\r\n    return value ? `${value / 16}rem` : 0;\r\n};\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nimport { pxToRem } from './utils/pxToRem';\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            'Roboto',\r\n            'sans-serif'\r\n        ].join(','),\r\n    },\r\n    backgroundColorMessageWrap: '#DCDCDC',\r\n    backgroundColorOwnerWindow: 'rgb(220, 248, 198)',\r\n    colorTimeChat: 'green',\r\n    overrides: {\r\n        MuiCssBaseline: {\r\n            '@global': {\r\n                'html': {\r\n                    boxSizing: 'border-box',\r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                'html, body': {\r\n                    outline: 'none',\r\n                },\r\n                body: {\r\n                    margin: '0 auto',\r\n                },\r\n                '#root': {\r\n                    minHeight: '100%',\r\n                    height: '100vh',\r\n                    width:'100%',\r\n                },\r\n                ':focus': {\r\n                    outline: 'none'\r\n                },\r\n                a: {\r\n                    textDecoration: 'none !important',\r\n                },\r\n            },\r\n        },\r\n        MuiFormLabel: {\r\n            root: {\r\n                '&.Mui-disabled': {\r\n                    color: ' rgba(0, 0, 0, 0.54)'\r\n                }\r\n            },\r\n            asterisk: {\r\n                display: 'none'\r\n            }\r\n        },\r\n        MuiFormHelperText: {\r\n            root: {\r\n                minHeight: pxToRem(22),\r\n                position: 'absolute',\r\n                bottom: pxToRem(-24),\r\n                left: pxToRem(-10)\r\n            }\r\n        },\r\n        MuiInputBase: {\r\n            root: {\r\n                position: 'relative',\r\n                '&.Mui-disabled': {\r\n                    color: 'initial'\r\n                }\r\n            }\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: 'none',\r\n                fontSize: pxToRem(16),\r\n            }\r\n        },\r\n        outlined: {\r\n            fontSize: pxToRem(16),\r\n            border: `2px `,\r\n        }\r\n    },\r\n    MuiOutlinedInput: {\r\n        notchedOutline: {\r\n            top: pxToRem(-4.5),\r\n        }\r\n    },\r\n    'MuiGrid-spacing-xs-2':{\r\n        margin: 0\r\n    }\r\n});\r\n\r\nexport default theme;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    toolBar: {\r\n        width: '100%',\r\n        height:'100%',\r\n        display: 'flex',\r\n    },\r\n    menuButton: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar className={classes.root} >\r\n            <Toolbar className={classes.toolBar} >\r\n                <IconButton\r\n                    size='small'\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                >\r\n                    <GitHubIcon />\r\n                </IconButton>\r\n                <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                >\r\n                    GitHub user search\r\n                </Typography >\r\n            </Toolbar >\r\n        </AppBar >\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        margin:pxToRem(6),\r\n        display: 'flex'\r\n    },\r\n    gridContainer: {\r\n        padding: pxToRem(12),\r\n        alignItems: 'center',\r\n    },\r\n\r\n    large: {\r\n        width: pxToRem(56),\r\n        height: pxToRem(56),\r\n    },\r\n    userName: {\r\n        textAlign:'left',\r\n        // paddingLeft: pxToRem(30),\r\n        // [theme.breakpoints.down('sm')]: {\r\n        //     paddingLeft: pxToRem(25),\r\n        // },\r\n        // [theme.breakpoints.down('xs')]: {\r\n        //     paddingLeft: pxToRem(12),\r\n        // },\r\n    },\r\n    repos: {\r\n        textAlign: 'right'\r\n    },\r\n    preloader: {\r\n        float:'right'\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport {  useSelector } from 'react-redux';\r\n\r\nimport { Avatar,  Button,  Grid, Paper, Typography } from '@material-ui/core';\r\n\r\nimport {  usersSelector } from '../../store/usersReducers';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst UserItem = ({user, handleDisplayCurrentUser}) => {\r\n    const classes = useStyles();\r\n\r\n    const { users} = useSelector(usersSelector);\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Button\r\n                fullWidth\r\n                onClick={() => handleDisplayCurrentUser(user.login, users)}\r\n            >\r\n                <Grid container className={classes.gridContainer} >\r\n                    <Grid item xs={6} sm={3} md={2} >\r\n                        <Avatar\r\n                            alt={user.login}\r\n                            src={user.avatar_url}\r\n                            variant=\"rounded\"\r\n                            className={classes.large} />\r\n                    </Grid >\r\n                    <Grid item xs={6} sm={5} md={8} className={classes.userName} >\r\n                        <Typography noWrap >\r\n                            {user.login}\r\n                        </Typography >\r\n                    </Grid >\r\n                    <Grid item xs={12} sm={4} md={2} >\r\n                            <Typography noWrap className={classes.repos} >\r\n                                Repo:&nbsp;{users[user.login].user.public_repos === 0 ? 0 : users[user.login].user.public_repos}\r\n                            </Typography >\r\n                    </Grid >\r\n                </Grid >\r\n            </Button >\r\n        </Paper >\r\n    );\r\n};\r\n\r\nexport default UserItem;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginRight:pxToRem(10)\r\n    },\r\n    container: {\r\n        padding: pxToRem(3),\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    titleContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontWeight: 500,\r\n        letterSpacing: pxToRem(0.2)\r\n    },\r\n    searchContainer: {\r\n        position: 'relative',\r\n        width:'100%',\r\n        boxSizing:'border-box',\r\n        // overflow: 'hidden',\r\n        padding: `${pxToRem(18)} ${pxToRem(36)} ${pxToRem(28)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            paddingLeft: pxToRem(14),\r\n            paddingRight: pxToRem(14),\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(6),\r\n            paddingRight: pxToRem(6),\r\n        },\r\n    },\r\n    searchBar: {},\r\n    preloader: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        bottom: 0,\r\n        left: 0,\r\n        right:0\r\n    },\r\n\r\n}));\r\n\r\nexport default useStyles;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport { Grid, LinearProgress, Paper, Typography } from '@material-ui/core';\r\nimport SearchBar from 'material-ui-search-bar';\r\n\r\nimport {\r\n    fetchCurrentUserRepos, fetchCurrentUsers, fetchQueriedUsers,\r\n    getCurrentUser, toggleDisplayCurrentUser, usersSelector\r\n} from '../../store/usersReducers';\r\n\r\nimport UserItem from '../UserItem';\r\n\r\nimport useStyles from './styles';\r\n\r\n\r\nconst UsersScreen = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading, users, queriedUsers, isOpenDisplayUser, isCurrentUsers} = useSelector(usersSelector);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const changeHandler = value => {\r\n        const nextValue = value.trim();\r\n\r\n        setQuery(nextValue);\r\n        if (nextValue !== '') {\r\n            dispatch(fetchQueriedUsers(nextValue));\r\n        } else {\r\n            cancelSearch();\r\n        }\r\n    };\r\n\r\n    const debouncedChangeHandler = useCallback(\r\n        debounce(changeHandler, 1000)\r\n        , []);\r\n\r\n    const cancelSearch = () => {\r\n        setQuery('');\r\n        dispatch(toggleDisplayCurrentUser(false));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (queriedUsers.length !== 0) {\r\n            dispatch(fetchCurrentUsers(queriedUsers, users))\r\n        }\r\n\r\n        return () => {\r\n            debouncedChangeHandler.cancel();\r\n        }\r\n    }, [queriedUsers]);\r\n\r\n    const handleDisplayCurrentUser = useCallback((login, users) => {\r\n        if (users.hasOwnProperty(login) && (users[login].repos && users[login].repos.length === 0)) {\r\n            dispatch((fetchCurrentUserRepos(login, users)));\r\n        } else {\r\n            dispatch(toggleDisplayCurrentUser(true));\r\n            dispatch(getCurrentUser(login));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Grid item sm={6} xs={12} className={classes.root}>\r\n            <Paper className={classes.paper} elevation={3} >\r\n                <Grid container direction=\"column\" className={classes.container} >\r\n                    <Grid item className={classes.titleContainer} >\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom className={classes.title} >\r\n                            GitHub Searcher\r\n                        </Typography >\r\n                    </Grid >\r\n                    <Grid item className={classes.searchContainer}>\r\n                        <SearchBar\r\n                            onChange={newValue => debouncedChangeHandler(newValue)}\r\n                            placeholder=\"Search for Users\"\r\n                            onCancelSearch={cancelSearch}\r\n                            onRequestSearch={cancelSearch}\r\n                            className={classes.searchBar}\r\n                       />\r\n                            {loading && !isOpenDisplayUser && (\r\n                                <LinearProgress color=\"secondary\" className={classes.preloader} />\r\n                            )}\r\n\r\n\r\n                    </Grid >\r\n                    {queriedUsers.length !== 0 && query !== '' &&  isCurrentUsers &&(\r\n                        <Grid item data-aos=\"fade-right\" >\r\n                            {queriedUsers.map(user => {\r\n                                return (\r\n                                    <UserItem\r\n                                        key={user.id}\r\n                                        user={user}\r\n                                        userLogin={user.login}\r\n                                        handleDisplayCurrentUser={handleDisplayCurrentUser}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </Grid >\r\n                    )}\r\n                </Grid >\r\n            </Paper >\r\n        </Grid >\r\n    );\r\n};\r\n\r\nexport default UsersScreen;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        margin:pxToRem(6),\r\n        display: 'flex'\r\n    },\r\n    gridContainer: {\r\n        padding: pxToRem(12),\r\n        alignItems: 'center',\r\n    },\r\n    link:{\r\n      width:'100%',\r\n      height:'100%'\r\n    },\r\n    large: {\r\n        width: pxToRem(56),\r\n        height: pxToRem(56),\r\n    },\r\n    userName: {\r\n        textAlign:'left',\r\n        paddingLeft: pxToRem(30),\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(25),\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingLeft: pxToRem(12),\r\n        },\r\n    },\r\n    repos: {\r\n        textAlign: 'right'\r\n    },\r\n    preloader: {\r\n        float:'right'\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport { Button, Grid, Link, Paper, Typography } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst ReposItem = ({repo}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Paper className={classes.paper} >\r\n            <Link href={repo.html_url} underline=\"none\" className={classes.link} >\r\n                <Button fullWidth >\r\n                    <Grid container className={classes.gridContainer} spacing={2} justifyContent=\"space-between\" >\r\n                        <Grid >\r\n                            <Typography >\r\n                                {repo.name}\r\n                            </Typography >\r\n                        </Grid >\r\n                        <Grid item >\r\n                            <Grid container direction=\"column\" >\r\n                                <Typography noWrap >\r\n                                    {repo.forks_count} &nbsp; Forks\r\n                                </Typography >\r\n                                <Typography noWrap >\r\n                                    {repo.stargazers_count} &nbsp; Stars\r\n                                </Typography >\r\n                            </Grid >\r\n                        </Grid >\r\n                    </Grid >\r\n\r\n                </Button >\r\n            </Link >\r\n        </Paper >\r\n    );\r\n};\r\n\r\nexport default ReposItem;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    containerUser:{\r\n        padding:pxToRem(12)\r\n    },\r\n    searchContainer:{\r\n        position: 'relative',\r\n        overflow:'hidden',\r\n        padding: `${pxToRem(18)} ${pxToRem(36)} ${pxToRem(28)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            paddingLeft: pxToRem(14),\r\n            paddingRight: pxToRem(14),\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(6),\r\n            paddingRight: pxToRem(6),\r\n        },\r\n    },\r\n    bio:{\r\n        paddingLeft:pxToRem(12)\r\n    },\r\n    large: {\r\n        width: pxToRem(160),\r\n        height: pxToRem(160),\r\n    },\r\n    preloader: {\r\n        position:'absolute',\r\n        width:'100%',\r\n        bottom:0,\r\n        left:0\r\n    },\r\n    reposContainer:{\r\n        padding:`0 ${pxToRem(4)}`\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport { Avatar,  Grid, LinearProgress, Paper, Typography } from '@material-ui/core';\r\nimport SearchBar from 'material-ui-search-bar';\r\n\r\nimport ReposItem from '../ReposItem';\r\n\r\nimport {  usersSelector } from '../../store/usersReducers';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst CurrentUserScreen = () => {\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        loading,\r\n        users,\r\n        currentUser,\r\n        isOpenDisplayUser\r\n    } = useSelector(usersSelector);\r\n    const [value, setValue] = useState('');\r\n    const [dbValue, saveToDb] = useState('');\r\n\r\n    const {user, repos} = users[currentUser];\r\n\r\n    let filteredRepos = repos;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            cancelSearch();\r\n        };\r\n    }, [currentUser]);\r\n\r\n\r\n    if (dbValue !== '' && (repos && repos.length !== 0)) {\r\n        filteredRepos = repos.filter((repo) => {\r\n            return repo.name.toLowerCase().includes(dbValue.toLowerCase());\r\n        });\r\n    }\r\n\r\n    const debouncedSave = useCallback(\r\n        debounce(nextValue => saveToDb(nextValue), 1000),\r\n        []); // will be created only once initially\r\n\r\n    const handleChange = value => {\r\n        const nextValue = value.trim();\r\n        setValue(nextValue);\r\n\r\n        debouncedSave(nextValue);\r\n    };\r\n    const cancelSearch = () => {\r\n        saveToDb('');\r\n        setValue('');\r\n        debouncedSave('');\r\n    };\r\n\r\n    return isOpenDisplayUser && (\r\n        <Grid item sm={6} data-aos=\"fade-left\" >\r\n            <Paper className={classes.paper} elevation={3} >\r\n                <Grid container direction=\"column\" className={classes.container} >\r\n                    <Grid item >\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom className={classes.title} >\r\n                            GitHub Searcher\r\n                        </Typography >\r\n                    </Grid >\r\n\r\n                    <Grid item xs={12}  md={12} >\r\n                        <Grid container alignItems=\"center\" spacing={2} className={classes.containerUser}>\r\n                            <Grid item md={6} >\r\n                                <Avatar\r\n                                    alt={user.login}\r\n                                    src={user.avatar_url}\r\n                                    variant=\"rounded\"\r\n                                    className={classes.large} />\r\n                            </Grid >\r\n                            <Grid item md={6} >\r\n                                <Grid container direction=\"column\" >\r\n                                    <Typography >\r\n                                        UserName &nbsp; - &nbsp;{user.login}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Email &nbsp; - &nbsp;{user.email}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Location &nbsp; - &nbsp;{user.location}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Join\r\n                                        Date &nbsp; - &nbsp;{(user.created_at).toLocaleString().slice(0, 10)}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        {user.followers} &nbsp; Followers\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Following &nbsp;{user.following}\r\n                                    </Typography >\r\n                                </Grid >\r\n\r\n                            </Grid >\r\n                            <Grid item xs={12} md={12} >\r\n                                <Typography className={classes.bio} >\r\n                                    {user.bio}\r\n                                </Typography >\r\n                            </Grid >\r\n                        </Grid >\r\n                    </Grid >\r\n                    <Grid item className={classes.searchContainer}>\r\n                        <SearchBar\r\n                            value={value}\r\n                            placeholder=\"Search for User's Repositories\"\r\n                            onChange={(newValue) => handleChange(newValue)}\r\n                            onCancelSearch={cancelSearch}\r\n                            onRequestSearch={cancelSearch}\r\n                            className={classes.searchBar}\r\n                        />\r\n                        {loading && (\r\n                            <LinearProgress color=\"secondary\" className={classes.preloader} />\r\n                        )}\r\n                    </Grid >\r\n\r\n                    {repos && repos.length !== 0 && (\r\n                        <Grid item data-aos=\"fade-left\"  className={classes.reposContainer}>\r\n                            {filteredRepos.map(repo => {\r\n                                return (\r\n                                    <ReposItem\r\n                                        key={repo.id}\r\n                                        repo={repo}\r\n                                        loading={loading}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </Grid >\r\n                    )}\r\n                </Grid >\r\n            </Paper >\r\n        </Grid >\r\n    );\r\n};\r\n\r\nexport default CurrentUserScreen;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        width: '100%',\r\n        minWidth:pxToRem(600),\r\n        flexWrap: 'nowrap',\r\n        padding: `${pxToRem(120)} ${pxToRem(18)} ${pxToRem(50)} ${pxToRem(18)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            paddingLeft: pxToRem(8),\r\n            paddingRight: pxToRem(8)\r\n        },\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport UsersScreen from '../UsersScreen';\r\nimport CurrentUserScreen from '../CurrentUserScreen';\r\n\r\nimport { usersSelector } from '../../store/usersReducers';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst ScreenContainer = () => {\r\n    const classes = useStyles();\r\n\r\n    const {isOpenDisplayUser} = useSelector(usersSelector);\r\n\r\n    return (\r\n            <Grid container\r\n                  component=\"main\"\r\n\r\n                  className={classes.container}\r\n            >\r\n                <UsersScreen />\r\n                {\r\n                    isOpenDisplayUser &&\r\n                    <CurrentUserScreen />\r\n                }\r\n            </Grid >\r\n    );\r\n};\r\n\r\nexport default ScreenContainer;\r\n","import { useEffect } from 'react';\r\nimport AOS from 'aos';\r\n\r\nimport Header from './components/Header';\r\nimport ScreenContainer from './components/ScreenContainer';\r\n\r\nimport 'aos/dist/aos.css';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        AOS.init({\r\n            offset: 80,\r\n            duration: 700\r\n        });\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ScreenContainer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { store } from './store'\r\n\r\nimport theme from './theme';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <ThemeProvider theme={theme} >\r\n            <CssBaseline />\r\n            <App />\r\n        </ThemeProvider >\r\n        <ToastContainer />\r\n    </Provider >,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}