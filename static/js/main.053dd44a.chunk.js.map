{"version":3,"sources":["configs/gitHubConfigs.js","configs/APIUrls.js","store/usersReducers.js","store/index.js","utils/pxToRem.js","theme.js","components/Header/styles.js","components/Header/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/UsersScreen/styles.js","components/UsersScreen/index.js","components/ReposItem/styles.js","components/ReposItem/index.js","components/CurrentUserScreen/styles.js","components/CurrentUserScreen/index.js","components/ScreenContainer/styles.js","components/ScreenContainer/index.js","App.js","index.js"],"names":["gitHubConfigs","process","APIUrls","baseURL","searchUsers","searchUser","gitHubQuerySettingsUsers","gitHubQuerySettingsRepos","usersSlice","createSlice","name","initialState","loading","error","queriedUsers","isCurrentUsers","currentUser","isCurrentUserRepos","isOpenDisplayUser","users","reducers","startLoading","state","getUsersSuccess","payload","errorMessage","getCurrentUsersSuccess","newUsers","reduce","acc","item","login","user","repos","getCurrentUserReposSuccess","length","getCurrentUser","getError","clearResults","toggleDisplayCurrentUser","actions","usersSelector","rootReducer","combineReducers","usersReducer","store","configureStore","reducer","devTools","devToolsEnhancer","realtime","pxToRem","value","theme","createTheme","typography","fontFamily","join","backgroundColorMessageWrap","backgroundColorOwnerWindow","colorTimeChat","overrides","MuiCssBaseline","boxSizing","width","height","outline","body","margin","minHeight","a","textDecoration","MuiButton","root","textTransform","fontSize","outlined","border","useStyles","makeStyles","marginTop","spacing","marginBottom","display","alignItems","toolBar","menuButton","paddingLeft","Header","classes","AppBar","className","Toolbar","IconButton","size","edge","color","Typography","component","variant","paper","backgroundColor","palette","background","default","gridContainer","padding","large","userName","textAlign","preloader","float","UserItem","handleDisplayCurrentUser","useSelector","Paper","Button","fullWidth","onClick","Grid","container","xs","sm","md","Avatar","alt","src","avatar_url","noWrap","public_repos","marginRight","flexGrow","titleContainer","flexWrap","title","fontWeight","letterSpacing","searchContainer","position","breakpoints","down","paddingRight","bottom","left","right","UsersScreen","dispatch","useDispatch","useState","query","setQuery","debouncedChangeHandler","useCallback","debounce","searchParams","nextValue","trim","axios","get","response","data","items","toast","message","cancelSearch","useEffect","getUsers","currentUsers","Object","entries","hasOwnProperty","Promise","all","then","fetchCurrentUsers","cancel","fetchCurrentUserRepos","elevation","direction","align","gutterBottom","onChange","newValue","placeholder","onCancelSearch","onRequestSearch","searchBar","LinearProgress","map","userLogin","id","link","ReposItem","repo","Link","href","html_url","underline","justifyContent","forks_count","stargazers_count","containerUser","overflow","bio","reposContainer","CurrentUserScreen","setValue","dbValue","saveToDb","filteredRepos","filter","toLowerCase","includes","debouncedSave","email","location","created_at","toLocaleString","slice","followers","following","handleChange","minWidth","ScreenContainer","App","AOS","init","offset","duration","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.053dd44a.chunk.js","sourcesContent":["export const gitHubConfigs = {\r\n    githubClientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\r\n    githubClientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET\r\n};\r\n","import { gitHubConfigs } from './gitHubConfigs';\r\n\r\nexport const APIUrls = {\r\n    baseURL: `https://api.github.com/`,\r\n    searchUsers: `https://api.github.com/search/users?q=`,\r\n    searchUser: `https://api.github.com/users/`,\r\n    gitHubQuerySettingsUsers: `client_id=${gitHubConfigs.githubClientId}&client_secret=${gitHubConfigs.githubClientSecret}&per_page=30`,\r\n    gitHubQuerySettingsRepos: `/repos?type=all&sort=updated&$client_id=${gitHubConfigs.githubClientId}&client_secret=${gitHubConfigs.githubClientSecret}`\r\n};\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { APIUrls } from '../configs/APIUrls';\r\n\r\nexport const initialState = {\r\n    loading: false,\r\n    error: null,\r\n    queriedUsers: [],\r\n    isCurrentUsers: false,\r\n    currentUser: null,\r\n    isCurrentUserRepos: false,\r\n    isOpenDisplayUser: false,\r\n    users: {}\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState,\r\n    reducers: {\r\n        startLoading: state => {\r\n            state.loading = true;\r\n        },\r\n        getUsersSuccess: (state, {payload}) => {\r\n            state.queriedUsers = payload;\r\n            state.isOpenDisplayUser = false;\r\n            state.isCurrentUsers = false;\r\n            state.loading = false;\r\n            state.errorMessage = null;\r\n        },\r\n        getCurrentUsersSuccess: (state, {payload}) => {\r\n            const newUsers = payload.reduce((acc, item) => {\r\n                acc[item.login] = {user: item, repos: []}\r\n                return acc;\r\n            }, {});\r\n\r\n            state.users = {...state.users, ...newUsers};\r\n            state.isOpenDisplayUser = false;\r\n            state.loading = false;\r\n            state.isCurrentUsers = true;\r\n            state.error = null;\r\n        },\r\n        getCurrentUserReposSuccess: (state, {payload: {repos, login}}) => {\r\n            if (repos.length === 0) {\r\n                state.users[login].repos = null;\r\n            } else {\r\n                state.users[login].repos = repos;\r\n            }\r\n\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.isOpenDisplayUser = true;\r\n            state.isCurrentUserRepos = true;\r\n            state.currentUser = login;\r\n        },\r\n        getCurrentUser: (state, {payload}) => {\r\n            state.currentUser = payload;\r\n            state.isCurrentUsers = true;\r\n        },\r\n        getError: (state, {payload}) => {\r\n            state.loading = false;\r\n            state.error = payload;\r\n        },\r\n        clearResults: state => {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.queriedUsers = [];\r\n            state.isCurrentUsers = false;\r\n            state.isCurrentUserRepos = false;\r\n            state.isOpenDisplayUser = false;\r\n        },\r\n        toggleDisplayCurrentUser: (state, {payload}) => {\r\n            if (payload) {\r\n                state.isOpenDisplayUser = payload\r\n            } else {\r\n                state.isCurrentUsers = false;\r\n                state.currentUser = null;\r\n                state.isCurrentUserRepos = false;\r\n                state.isOpenDisplayUser = false;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    startLoading,\r\n    getUsersSuccess,\r\n    getCurrentUsersSuccess,\r\n    getCurrentUser,\r\n    getCurrentUserReposSuccess,\r\n    getError,\r\n    clearResults,\r\n    toggleDisplayCurrentUser\r\n} = usersSlice.actions;\r\n\r\nexport const usersSelector = state => state.users;\r\n\r\nexport default usersSlice.reducer;\r\n\r\nexport const fetchQueriedUsers = (searchParams) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n\r\n        try {\r\n            const response = await axios.get(`${APIUrls.searchUsers}${searchParams}&${APIUrls.gitHubQuerySettingsUsers}`);\r\n\r\n            if (response) {\r\n                dispatch(getUsersSuccess(response.data.items));\r\n            }\r\n        } catch (error) {\r\n            toast.error(error?.message);\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const fetchCurrentUsers = (queriedUsers, users) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n\r\n        try {\r\n            const getUsers = async (queriedUsers, users) => {\r\n                let currentUsers = [];\r\n\r\n                for (let user of queriedUsers) {\r\n                    if (Object.entries(users).length === 0 || !(users.hasOwnProperty(user.login))) {\r\n                        const response = await axios.get(`${APIUrls.searchUser}${user.login}?${APIUrls.gitHubQuerySettingsUsers}`);\r\n\r\n                        currentUsers = [...currentUsers, response.data];\r\n                    }\r\n                }\r\n\r\n                return await Promise.all(currentUsers);\r\n            };\r\n\r\n            await getUsers(queriedUsers, users).then(data => dispatch(getCurrentUsersSuccess(data)));\r\n        } catch (error) {\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchCurrentUserRepos = (login, users) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n\r\n        try {\r\n            if ((users[login].repos && users[login].repos.length === 0) || !(users.hasOwnProperty(login))) {\r\n                const response = await axios.get(`${APIUrls.searchUser}${login}${APIUrls.gitHubQuerySettingsRepos}`);\r\n\r\n                if (response) {\r\n                    await dispatch(getCurrentUserReposSuccess({login, repos: response.data}));\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            toast.error(error?.message);\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nimport usersReducer from './usersReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersReducer,\r\n});\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: [devToolsEnhancer({realtime: true})]\r\n});\r\n","export const pxToRem = (value) => {\r\n    return value ? `${value / 16}rem` : 0;\r\n};\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nimport { pxToRem } from './utils/pxToRem';\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            'Roboto',\r\n            'sans-serif'\r\n        ].join(','),\r\n    },\r\n    backgroundColorMessageWrap: '#DCDCDC',\r\n    backgroundColorOwnerWindow: 'rgb(220, 248, 198)',\r\n    colorTimeChat: 'green',\r\n    overrides: {\r\n        MuiCssBaseline: {\r\n            '@global': {\r\n                'html': {\r\n                    boxSizing: 'border-box',\r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                'html, body': {\r\n                    outline: 'none',\r\n                },\r\n                body: {\r\n                    margin: '0 auto',\r\n                },\r\n                '#root': {\r\n                    minHeight: '100%',\r\n                    height: '100vh',\r\n                    width: '100%',\r\n                },\r\n                ':focus': {\r\n                    outline: 'none'\r\n                },\r\n                a: {\r\n                    textDecoration: 'none !important',\r\n                },\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: 'none',\r\n                fontSize: pxToRem(16),\r\n            }\r\n        },\r\n        outlined: {\r\n            fontSize: pxToRem(16),\r\n            border: `2px `,\r\n        }\r\n    },\r\n    'MuiGrid-spacing-xs-2': {\r\n        margin: 0\r\n    }\r\n});\r\n\r\nexport default theme;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    toolBar: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n    },\r\n    menuButton: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar className={classes.root} >\r\n            <Toolbar className={classes.toolBar} >\r\n                <IconButton\r\n                    size=\"small\"\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                >\r\n                    <GitHubIcon />\r\n                </IconButton >\r\n                <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                >\r\n                    GitHub user search\r\n                </Typography >\r\n            </Toolbar >\r\n        </AppBar >\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        margin: pxToRem(6),\r\n        display: 'flex'\r\n    },\r\n    gridContainer: {\r\n        padding: pxToRem(12),\r\n        alignItems: 'center',\r\n    },\r\n    large: {\r\n        width: pxToRem(56),\r\n        height: pxToRem(56),\r\n    },\r\n    userName: {\r\n        textAlign: 'left',\r\n    },\r\n    repos: {\r\n        textAlign: 'right'\r\n    },\r\n    preloader: {\r\n        float: 'right'\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Avatar, Button, Grid, Paper, Typography } from '@material-ui/core';\r\n\r\nimport { usersSelector } from '../../store/usersReducers';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst UserItem = ({user, handleDisplayCurrentUser}) => {\r\n    const classes = useStyles();\r\n\r\n    const {users} = useSelector(usersSelector);\r\n\r\n    return (\r\n        <Paper className={classes.paper} >\r\n            <Button\r\n                fullWidth\r\n                onClick={() => handleDisplayCurrentUser(user.login, users)}\r\n            >\r\n                <Grid container className={classes.gridContainer} >\r\n                    <Grid item xs={6} sm={3} md={2} >\r\n                        <Avatar\r\n                            alt={user.login}\r\n                            src={user.avatar_url}\r\n                            variant=\"rounded\"\r\n                            className={classes.large} />\r\n                    </Grid >\r\n                    <Grid item xs={6} sm={5} md={8} className={classes.userName} >\r\n                        <Typography noWrap >\r\n                            {user.login}\r\n                        </Typography >\r\n                    </Grid >\r\n                    <Grid item xs={12} sm={4} md={2} >\r\n                        <Typography noWrap className={classes.repos} >\r\n                            Repo:&nbsp;{users[user.login].user.public_repos === 0 ? 0 : users[user.login].user.public_repos}\r\n                        </Typography >\r\n                    </Grid >\r\n                </Grid >\r\n            </Button >\r\n        </Paper >\r\n    );\r\n};\r\n\r\nexport default UserItem;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginRight: pxToRem(10)\r\n    },\r\n    container: {\r\n        padding: pxToRem(3),\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    titleContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontWeight: 500,\r\n        letterSpacing: pxToRem(0.2)\r\n    },\r\n    searchContainer: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        padding: `${pxToRem(18)} ${pxToRem(36)} ${pxToRem(28)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            paddingLeft: pxToRem(14),\r\n            paddingRight: pxToRem(14),\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(6),\r\n            paddingRight: pxToRem(6),\r\n        },\r\n    },\r\n    preloader: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport { Grid, LinearProgress, Paper, Typography } from '@material-ui/core';\r\nimport SearchBar from 'material-ui-search-bar';\r\n\r\nimport {\r\n    fetchCurrentUserRepos, fetchCurrentUsers, fetchQueriedUsers,\r\n    getCurrentUser, toggleDisplayCurrentUser, usersSelector\r\n} from '../../store/usersReducers';\r\n\r\nimport UserItem from '../UserItem';\r\n\r\nimport useStyles from './styles';\r\n\r\n\r\nconst UsersScreen = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading, users, queriedUsers, isOpenDisplayUser, isCurrentUsers} = useSelector(usersSelector);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const changeHandler = value => {\r\n        const nextValue = value.trim();\r\n\r\n        setQuery(nextValue);\r\n        if (nextValue !== '') {\r\n            dispatch(fetchQueriedUsers(nextValue));\r\n        } else {\r\n            cancelSearch();\r\n        }\r\n    };\r\n\r\n    const debouncedChangeHandler = useCallback(\r\n        debounce(changeHandler, 1000)\r\n        , []);\r\n\r\n    const cancelSearch = () => {\r\n        setQuery('');\r\n        dispatch(toggleDisplayCurrentUser(false));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (queriedUsers.length !== 0) {\r\n            dispatch(fetchCurrentUsers(queriedUsers, users))\r\n        }\r\n\r\n        return () => {\r\n            debouncedChangeHandler.cancel();\r\n        }\r\n    }, [queriedUsers]);\r\n\r\n    const handleDisplayCurrentUser = useCallback((login, users) => {\r\n        if (users.hasOwnProperty(login) && (users[login].repos && users[login].repos.length === 0)) {\r\n            dispatch((fetchCurrentUserRepos(login, users)));\r\n        } else {\r\n            dispatch(toggleDisplayCurrentUser(true));\r\n            dispatch(getCurrentUser(login));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Grid item sm={6} xs={12} className={classes.root} >\r\n            <Paper className={classes.paper} elevation={3} >\r\n                <Grid container direction=\"column\" className={classes.container} >\r\n                    <Grid item className={classes.titleContainer} >\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom className={classes.title} >\r\n                            GitHub Searcher\r\n                        </Typography >\r\n                    </Grid >\r\n                    <Grid item className={classes.searchContainer} >\r\n                        <SearchBar\r\n                            onChange={newValue => debouncedChangeHandler(newValue)}\r\n                            placeholder=\"Search for Users\"\r\n                            onCancelSearch={cancelSearch}\r\n                            onRequestSearch={cancelSearch}\r\n                            className={classes.searchBar}\r\n                        />\r\n                        {loading && !isOpenDisplayUser && (\r\n                            <LinearProgress color=\"secondary\" className={classes.preloader} />\r\n                        )}\r\n                    </Grid >\r\n                    {queriedUsers.length !== 0 && query !== '' && isCurrentUsers && (\r\n                        <Grid item data-aos=\"fade-right\" >\r\n                            {queriedUsers.map(user => {\r\n                                return (\r\n                                    <UserItem\r\n                                        key={user.id}\r\n                                        user={user}\r\n                                        userLogin={user.login}\r\n                                        handleDisplayCurrentUser={handleDisplayCurrentUser}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </Grid >\r\n                    )}\r\n                </Grid >\r\n            </Paper >\r\n        </Grid >\r\n    );\r\n};\r\n\r\nexport default UsersScreen;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        margin: pxToRem(6),\r\n        display: 'flex'\r\n    },\r\n    gridContainer: {\r\n        padding: pxToRem(12),\r\n        alignItems: 'center',\r\n    },\r\n    link: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    large: {\r\n        width: pxToRem(56),\r\n        height: pxToRem(56),\r\n    },\r\n    userName: {\r\n        textAlign: 'left',\r\n        paddingLeft: pxToRem(30),\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(25),\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingLeft: pxToRem(12),\r\n        },\r\n    },\r\n    repos: {\r\n        textAlign: 'right'\r\n    },\r\n    preloader: {\r\n        float: 'right'\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport { Button, Grid, Link, Paper, Typography } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst ReposItem = ({repo}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper} >\r\n            <Link href={repo.html_url} underline=\"none\" className={classes.link} >\r\n                <Button fullWidth >\r\n                    <Grid container className={classes.gridContainer} spacing={2} justifyContent=\"space-between\" >\r\n                        <Grid >\r\n                            <Typography >\r\n                                {repo.name}\r\n                            </Typography >\r\n                        </Grid >\r\n                        <Grid item >\r\n                            <Grid container direction=\"column\" >\r\n                                <Typography noWrap >\r\n                                    {repo.forks_count} &nbsp; Forks\r\n                                </Typography >\r\n                                <Typography noWrap >\r\n                                    {repo.stargazers_count} &nbsp; Stars\r\n                                </Typography >\r\n                            </Grid >\r\n                        </Grid >\r\n                    </Grid >\r\n\r\n                </Button >\r\n            </Link >\r\n        </Paper >\r\n    );\r\n};\r\n\r\nexport default ReposItem;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    containerUser: {\r\n        padding: pxToRem(12)\r\n    },\r\n    searchContainer: {\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        padding: `${pxToRem(18)} ${pxToRem(36)} ${pxToRem(28)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            paddingLeft: pxToRem(14),\r\n            paddingRight: pxToRem(14),\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(6),\r\n            paddingRight: pxToRem(6),\r\n        },\r\n    },\r\n    bio: {\r\n        paddingLeft: pxToRem(12)\r\n    },\r\n    large: {\r\n        width: pxToRem(160),\r\n        height: pxToRem(160),\r\n    },\r\n    preloader: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        bottom: 0,\r\n        left: 0\r\n    },\r\n    reposContainer: {\r\n        padding: `0 ${pxToRem(4)}`\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport { Avatar, Grid, LinearProgress, Paper, Typography } from '@material-ui/core';\r\nimport SearchBar from 'material-ui-search-bar';\r\n\r\nimport ReposItem from '../ReposItem';\r\n\r\nimport { usersSelector } from '../../store/usersReducers';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst CurrentUserScreen = () => {\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        loading,\r\n        users,\r\n        currentUser,\r\n        isOpenDisplayUser\r\n    } = useSelector(usersSelector);\r\n\r\n    const [value, setValue] = useState('');\r\n    const [dbValue, saveToDb] = useState('');\r\n\r\n    const {user, repos} = users[currentUser];\r\n\r\n    let filteredRepos = repos;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            cancelSearch();\r\n        };\r\n    }, [currentUser]);\r\n\r\n    if (dbValue !== '' && (repos && repos.length !== 0)) {\r\n        filteredRepos = repos.filter((repo) => {\r\n            return repo.name.toLowerCase().includes(dbValue.toLowerCase());\r\n        });\r\n    }\r\n\r\n    const debouncedSave = useCallback(\r\n        debounce(nextValue => saveToDb(nextValue), 1000),\r\n        []); // will be created only once initially\r\n\r\n    const handleChange = value => {\r\n        const nextValue = value.trim();\r\n        setValue(nextValue);\r\n\r\n        debouncedSave(nextValue);\r\n    };\r\n    const cancelSearch = () => {\r\n        saveToDb('');\r\n        setValue('');\r\n        debouncedSave('');\r\n    };\r\n\r\n    return isOpenDisplayUser && (\r\n        <Grid item sm={6} data-aos=\"fade-left\" >\r\n            <Paper className={classes.paper} elevation={3} >\r\n                <Grid container direction=\"column\" className={classes.container} >\r\n                    <Grid item >\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom className={classes.title} >\r\n                            GitHub Searcher\r\n                        </Typography >\r\n                    </Grid >\r\n                    <Grid item xs={12} md={12} >\r\n                        <Grid container alignItems=\"center\" spacing={2} className={classes.containerUser} >\r\n                            <Grid item md={6} >\r\n                                <Avatar\r\n                                    alt={user.login}\r\n                                    src={user.avatar_url}\r\n                                    variant=\"rounded\"\r\n                                    className={classes.large} />\r\n                            </Grid >\r\n                            <Grid item md={6} >\r\n                                <Grid container direction=\"column\" >\r\n                                    <Typography >\r\n                                        UserName &nbsp; - &nbsp;{user.login}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Email &nbsp; - &nbsp;{user.email}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Location &nbsp; - &nbsp;{user.location}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Join\r\n                                        Date &nbsp; - &nbsp;{(user.created_at).toLocaleString().slice(0, 10)}\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        {user.followers} &nbsp; Followers\r\n                                    </Typography >\r\n                                    <Typography >\r\n                                        Following &nbsp;{user.following}\r\n                                    </Typography >\r\n                                </Grid >\r\n\r\n                            </Grid >\r\n                            <Grid item xs={12} md={12} >\r\n                                <Typography className={classes.bio} >\r\n                                    {user.bio}\r\n                                </Typography >\r\n                            </Grid >\r\n                        </Grid >\r\n                    </Grid >\r\n                    <Grid item className={classes.searchContainer} >\r\n                        <SearchBar\r\n                            value={value}\r\n                            placeholder=\"Search for User's Repositories\"\r\n                            onChange={(newValue) => handleChange(newValue)}\r\n                            onCancelSearch={cancelSearch}\r\n                            onRequestSearch={cancelSearch}\r\n                            className={classes.searchBar}\r\n                        />\r\n                        {loading && (\r\n                            <LinearProgress color=\"secondary\" className={classes.preloader} />\r\n                        )}\r\n                    </Grid >\r\n\r\n                    {repos && repos.length !== 0 && (\r\n                        <Grid item data-aos=\"fade-left\" className={classes.reposContainer} >\r\n                            {filteredRepos.map(repo => {\r\n                                return (\r\n                                    <ReposItem\r\n                                        key={repo.id}\r\n                                        repo={repo}\r\n                                        loading={loading}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </Grid >\r\n                    )}\r\n                </Grid >\r\n            </Paper >\r\n        </Grid >\r\n    );\r\n};\r\n\r\nexport default CurrentUserScreen;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        width: '100%',\r\n        minWidth: pxToRem(600),\r\n        flexWrap: 'nowrap',\r\n        padding: `${pxToRem(120)} ${pxToRem(18)} ${pxToRem(50)} ${pxToRem(18)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            paddingLeft: pxToRem(8),\r\n            paddingRight: pxToRem(8)\r\n        },\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport UsersScreen from '../UsersScreen';\r\nimport CurrentUserScreen from '../CurrentUserScreen';\r\n\r\nimport { usersSelector } from '../../store/usersReducers';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst ScreenContainer = () => {\r\n    const classes = useStyles();\r\n\r\n    const {isOpenDisplayUser} = useSelector(usersSelector);\r\n\r\n    return (\r\n        <Grid container\r\n              component=\"main\"\r\n\r\n              className={classes.container}\r\n        >\r\n            <UsersScreen />\r\n            {\r\n                isOpenDisplayUser &&\r\n                <CurrentUserScreen />\r\n            }\r\n        </Grid >\r\n    );\r\n};\r\n\r\nexport default ScreenContainer;\r\n","import { useEffect } from 'react';\r\nimport AOS from 'aos';\r\n\r\nimport Header from './components/Header';\r\nimport ScreenContainer from './components/ScreenContainer';\r\n\r\nimport 'aos/dist/aos.css';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        AOS.init({\r\n            offset: 80,\r\n            duration: 700\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ScreenContainer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { store } from './store'\r\n\r\nimport theme from './theme';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <ThemeProvider theme={theme} >\r\n            <CssBaseline />\r\n            <App />\r\n        </ThemeProvider >\r\n        <ToastContainer />\r\n    </Provider >,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}