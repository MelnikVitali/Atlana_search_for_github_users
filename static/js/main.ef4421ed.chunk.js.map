{"version":3,"sources":["configs/gitHubConfigs.js","configs/APIUrls.js","store/usersReducers.js","store/index.js","utils/pxToRem.js","theme.js","components/Header/styles.js","components/Header/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/UsersScreen/styles.js","components/UsersScreen/index.js","components/ScreenContainer/styles.js","components/CurrentUserScreen/styles.js","components/ReposItem/styles.js","components/ScreenContainer/index.js","App.js","index.js"],"names":["gitHubConfigs","process","APIUrls","baseURL","searchUsers","searchUser","gitHubQuerySettingsUsers","gitHubQuerySettingsRepos","usersSlice","createSlice","name","initialState","loading","error","queriedUsers","currentUsers","isCurrentUsers","currentUser","isCurrentUserRepos","isOpenDisplayUser","users","reducers","startLoading","state","getUsersSuccess","payload","errorMessage","getCurrentUsersSuccess","newUsers","reduce","acc","item","login","user","repos","getCurrentUserSuccess","getCurrentUserReposSuccess","owner","getCurrentUser","getError","clearResults","toggleDisplayCurrentUser","actions","usersSelector","rootReducer","combineReducers","usersReducer","store","configureStore","reducer","devTools","devToolsEnhancer","realtime","pxToRem","value","theme","createTheme","typography","fontFamily","join","backgroundColorMessageWrap","backgroundColorOwnerWindow","colorTimeChat","overrides","MuiCssBaseline","boxSizing","width","height","outline","body","margin","minHeight","a","textDecoration","MuiFormLabel","root","color","asterisk","display","MuiFormHelperText","position","bottom","left","MuiInputBase","MuiButton","textTransform","fontSize","outlined","border","MuiOutlinedInput","notchedOutline","top","useStyles","makeStyles","marginTop","spacing","marginBottom","alignItems","toolBar","menuButton","paddingLeft","Header","classes","AppBar","className","Toolbar","IconButton","size","edge","Typography","component","variant","require","paper","backgroundColor","palette","background","default","gridContainer","padding","large","userName","textAlign","breakpoints","down","preloader","float","UserItem","React","memo","handleDisplayCurrentUser","dispatch","useDispatch","useSelector","useEffect","console","log","Object","keys","length","axios","get","response","data","toast","message","Paper","Button","fullWidth","onClick","Grid","container","xs","sm","md","Avatar","alt","src","avatar_url","noWrap","Box","CircularProgress","thickness","public_repos","flexGrow","title","fontWeight","letterSpacing","searchBar","marginLeft","marginRight","UsersScreen","useState","setValue","dbValue","saveToDb","debouncedSave","useCallback","debounce","nextValue","cancelSearch","searchParams","items","fetchCurrentUserRepos","elevation","direction","align","gutterBottom","onChange","newValue","trim","handleChange","placeholder","onCancelSearch","onRequestSearch","map","userLogin","id","link","flexWrap","paddingRight","ScreenContainer","App","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.ef4421ed.chunk.js","sourcesContent":["export const gitHubConfigs = {\r\n    githubClientId: process.env.REACT_APP_GITHUB_CLIENT_ID,\r\n    githubClientSecret: process.env.REACT_APP_GITHUB_CLIENT_SECRET\r\n};\r\n","import { gitHubConfigs } from './gitHubConfigs';\r\n\r\nexport const APIUrls = {\r\n    baseURL: `https://api.github.com/`,\r\n    searchUsers: `https://api.github.com/search/users?q=`,\r\n    searchUser: `https://api.github.com/users/`,\r\n    gitHubQuerySettingsUsers: `client_id=${gitHubConfigs.githubClientId}&client_secret=${gitHubConfigs.githubClientSecret}&per_page=2`,\r\n    gitHubQuerySettingsRepos: `/repos?type=all&sort=updated&$client_id=${gitHubConfigs.githubClientId}&client_secret=${gitHubConfigs.githubClientSecret}&per_page=300`\r\n};\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { APIUrls } from '../configs/APIUrls';\r\n\r\nexport const initialState = {\r\n    loading: false,\r\n    error: null,\r\n    queriedUsers: [],\r\n    currentUsers: [],\r\n    isCurrentUsers: false,\r\n    currentUser: null,\r\n    isCurrentUserRepos: false,\r\n    isOpenDisplayUser: false,\r\n    users: {}\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState,\r\n    reducers: {\r\n        startLoading: state => {\r\n            state.loading = true;\r\n        },\r\n        getUsersSuccess: (state, {payload}) => {\r\n\r\n            state.queriedUsers = payload;\r\n            state.isOpenDisplayUser = false;\r\n            state.loading = false;\r\n            state.errorMessage = null;\r\n        },\r\n        getCurrentUsersSuccess: (state, {payload}) => {\r\n            const newUsers = payload.reduce((acc, item) => {\r\n                acc[item.login] = {user: item, repos: []}\r\n                return acc;\r\n            }, {});\r\n\r\n            state.users = {...state.users, ...newUsers};\r\n            state.currentUsers = payload;\r\n            state.loading = false;\r\n            state.error = null;\r\n        },\r\n        getCurrentUserSuccess: (state, {payload}) => {\r\n            state.users = {\r\n                ...state.users,\r\n                [payload.login]: {\r\n                    user: {\r\n                        ...payload\r\n                    },\r\n                    repos: []\r\n                }\r\n            };\r\n            state.loading = false;\r\n            state.error = null;\r\n            // state.isCurrentUserRepos = true;\r\n        },\r\n        getCurrentUserReposSuccess: (state, {payload}) => {\r\n            const login = payload[0].owner.login;\r\n\r\n            state.users[login].repos = payload;\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.isCurrentUserRepos = true;\r\n        },\r\n\r\n        getCurrentUser: (state, {payload}) => {\r\n            state.currentUser = payload;\r\n            state.isCurrentUserRepos = false;\r\n        },\r\n        getError: (state, {payload}) => {\r\n            state.loading = false;\r\n            state.error = payload;\r\n        },\r\n        clearResults: state => {\r\n            state.loading = false;\r\n            state.error = null;\r\n            state.queriedUsers = [];\r\n            state.isCurrentUsers = false;\r\n            state.isCurrentUserRepos = false;\r\n            state.isOpenDisplayUser = false;\r\n        },\r\n        toggleDisplayCurrentUser: state => {\r\n            state.isOpenDisplayUser = true\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    startLoading,\r\n    getUsersSuccess,\r\n    getCurrentUsersSuccess,\r\n    getCurrentUser,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserReposSuccess,\r\n    getError,\r\n    clearResults,\r\n    toggleDisplayCurrentUser\r\n} = usersSlice.actions;\r\n\r\nexport const usersSelector = state => state.users;\r\n\r\nexport default usersSlice.reducer;\r\n\r\nexport const fetchQueriedUsers = (searchParams) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n        try {\r\n            const response = await axios.get(`${APIUrls.searchUsers}${searchParams}&${APIUrls.gitHubQuerySettingsUsers}`);\r\n\r\n            if (response) {\r\n                dispatch(getUsersSuccess(response.data.items));\r\n            }\r\n        } catch (error) {\r\n            toast.error(error?.message);\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n\r\n\r\n// export const fetchCurrentUsers = (queriedUsers, users) => {\r\n//     return async dispatch => {\r\n//         dispatch(startLoading());\r\n//         console.log('queriedUsers', queriedUsers);\r\n//         try {\r\n//             const getUsers = async (queriedUsers, users) => {\r\n//                 let currentUsers = [];\r\n//                 for (let user of queriedUsers) {\r\n//\r\n//                     if(!users && !(user.login in user)){\r\n//                         const response = axios.get(`${APIUrls.searchUser}${user.login}?${APIUrls.gitHubQuerySettingsUsers}`);\r\n//\r\n//                         currentUsers = [...currentUsers, (await response).data];\r\n//                     }\r\n//                 }\r\n//\r\n//                 return await Promise.all(currentUsers);\r\n//             };\r\n//\r\n//             await getUsers(queriedUsers, users).then(data => dispatch(getCurrentUsersSuccess(data)));\r\n//         } catch (error) {\r\n//\r\n//             dispatch(getError(error?.message));\r\n//         }\r\n//     };\r\n// };\r\n\r\nexport const fetchCurrentUser = (login) => {\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n        try {\r\n            const response = await axios.get(`${APIUrls.searchUser}${login}?${APIUrls.gitHubQuerySettingsUsers}`);\r\n\r\n            if (response) {\r\n                dispatch(getCurrentUserSuccess(response.data));\r\n            }\r\n        } catch (error) {\r\n            toast.error(error?.message);\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchCurrentUserRepos = (login) => {\r\n    console.log('5555', login);\r\n    return async dispatch => {\r\n        dispatch(startLoading());\r\n        try {\r\n            const response = await axios.get(`${APIUrls.searchUser}${login}${APIUrls.gitHubQuerySettingsRepos}`);\r\n\r\n            if (response) {\r\n                dispatch(getCurrentUserReposSuccess(response.data));\r\n            }\r\n        } catch (error) {\r\n            toast.error(error?.message);\r\n\r\n            dispatch(getError(error?.message));\r\n        }\r\n    };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nimport usersReducer from './usersReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersReducer,\r\n});\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools:[ devToolsEnhancer({ realtime: true }) ]\r\n});\r\n","export const pxToRem = (value) => {\r\n    return value ? `${value / 16}rem` : 0;\r\n};\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nimport { pxToRem } from './utils/pxToRem';\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            'Roboto',\r\n            'sans-serif'\r\n        ].join(','),\r\n    },\r\n    backgroundColorMessageWrap: '#DCDCDC',\r\n    backgroundColorOwnerWindow: 'rgb(220, 248, 198)',\r\n    colorTimeChat: 'green',\r\n    overrides: {\r\n        MuiCssBaseline: {\r\n            '@global': {\r\n                'html': {\r\n                    boxSizing: 'border-box',\r\n                    width: '100%',\r\n                    height: '100%'\r\n                },\r\n                'html, body': {\r\n                    outline: 'none',\r\n                },\r\n                body: {\r\n                    margin: '0 auto',\r\n                },\r\n                '#root': {\r\n                    minHeight: '100%',\r\n                    height: '100vh',\r\n                    width:'100%',\r\n                },\r\n                ':focus': {\r\n                    outline: 'none'\r\n                },\r\n                a: {\r\n                    textDecoration: 'none !important',\r\n                },\r\n            },\r\n        },\r\n        MuiFormLabel: {\r\n            root: {\r\n                '&.Mui-disabled': {\r\n                    color: ' rgba(0, 0, 0, 0.54)'\r\n                }\r\n            },\r\n            asterisk: {\r\n                display: 'none'\r\n            }\r\n        },\r\n        MuiFormHelperText: {\r\n            root: {\r\n                minHeight: pxToRem(22),\r\n                position: 'absolute',\r\n                bottom: pxToRem(-24),\r\n                left: pxToRem(-10)\r\n            }\r\n        },\r\n        MuiInputBase: {\r\n            root: {\r\n                position: 'relative',\r\n                '&.Mui-disabled': {\r\n                    color: 'initial'\r\n                }\r\n            }\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: 'none',\r\n                fontSize: pxToRem(16),\r\n            }\r\n        },\r\n        outlined: {\r\n            fontSize: pxToRem(16),\r\n            border: `2px `,\r\n        }\r\n    },\r\n    MuiOutlinedInput: {\r\n        notchedOutline: {\r\n            top: pxToRem(-4.5),\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    toolBar: {\r\n        width: '100%',\r\n        // paddingLeft: theme.spacing(10),\r\n        display: 'flex',\r\n    },\r\n    menuButton: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar className={classes.root} >\r\n            <Toolbar className={classes.toolBar} >\r\n                <IconButton\r\n                    size='small'\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                >\r\n                    <GitHubIcon />\r\n                </IconButton>\r\n                <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                >\r\n                    GitHub user search\r\n                </Typography >\r\n            </Toolbar >\r\n        </AppBar >\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        margin:pxToRem(6),\r\n        display: 'flex'\r\n    },\r\n    gridContainer: {\r\n        padding: pxToRem(12),\r\n        alignItems: 'center',\r\n    },\r\n\r\n    large: {\r\n        width: pxToRem(56),\r\n        height: pxToRem(56),\r\n    },\r\n    userName: {\r\n        textAlign:'left',\r\n        paddingLeft: pxToRem(30),\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(25),\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingLeft: pxToRem(12),\r\n        },\r\n    },\r\n    repos: {\r\n        textAlign: 'right'\r\n    },\r\n    preloader: {\r\n        float:'right'\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useEffect } from 'react';\r\nimport { Avatar, Box, Button, CircularProgress, Grid, Paper, Typography } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCurrentUser, usersSelector } from '../../store/usersReducers';\r\n\r\nconst UserItem = React.memo(({user, handleDisplayCurrentUser}) => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading, isCurrentUsers, queriedUsers, currentUsers, users} = useSelector(usersSelector);\r\n\r\n    useEffect(() => {\r\n        console.log(!users[user.login]);\r\n        if (Object.keys(users).length === 0 || !users[user.login]) {\r\n            dispatch(fetchCurrentUser(user.login));\r\n        }\r\n    }, [queriedUsers]);\r\n\r\n    console.log('renderuserItem');\r\n\r\n    return (\r\n        <Paper className={classes.paper} >\r\n            <Button\r\n                fullWidth\r\n                onClick={() => handleDisplayCurrentUser(user.login, users)}\r\n            >\r\n                <Grid container className={classes.gridContainer} >\r\n                    <Grid item xs={12} sm={3} md={2} >\r\n                        <Avatar\r\n                            alt={user.login}\r\n                            src={user.avatar_url}\r\n                            variant=\"rounded\"\r\n                            className={classes.large} />\r\n                    </Grid >\r\n                    <Grid item xs={12} sm={7} md={8} className={classes.userName} >\r\n                        <Typography noWrap >\r\n                            {user.login}\r\n                        </Typography >\r\n                    </Grid >\r\n                    <Grid item xs={12} sm={2} md={2} >\r\n\r\n                        {loading && (\r\n                            <Box className={classes.preloader} >\r\n                                <CircularProgress\r\n                                    thickness={5}\r\n                                    size={36}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </Box >\r\n                        )}\r\n                        {!loading && (users[user.login]) && (\r\n                            <Typography noWrap className={classes.repos} >\r\n                                Repo: {users[user.login].user.public_repos}\r\n                            </Typography >\r\n                        )}\r\n\r\n                    </Grid >\r\n\r\n                </Grid >\r\n            </Button >\r\n        </Paper >\r\n    );\r\n});\r\n\r\nexport default UserItem;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        position:'relative',\r\n        padding: pxToRem(3),\r\n        width: '100%',\r\n        flexGrow: 1\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    title: {\r\n        fontWeight: 500,\r\n        letterSpacing: pxToRem(0.2)\r\n    },\r\n    searchBar: {\r\n        margin: `${pxToRem(18)} ${pxToRem(36)} ${pxToRem(28)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            marginLeft: pxToRem(14),\r\n            marginRight: pxToRem(14),\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: pxToRem(6),\r\n            marginRight: pxToRem(6),\r\n        },\r\n    },\r\n    preloader: {\r\n        position:'absolute',\r\n        top:pxToRem(66),\r\n        left:pxToRem(18)\r\n        // margin: `0  ${pxToRem(40)}  ${pxToRem(12)}`,\r\n    },\r\n\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport { Box, CircularProgress, Grid, Paper, Typography } from '@material-ui/core';\r\nimport SearchBar from 'material-ui-search-bar';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    fetchCurrentUserRepos,\r\n    fetchCurrentUsers,\r\n    fetchQueriedUsers,\r\n    getCurrentUser,\r\n    toggleDisplayCurrentUser,\r\n    usersSelector\r\n} from '../../store/usersReducers';\r\nimport UserItem from '../UserItem';\r\nimport useStyles from './styles';\r\n\r\nconst UsersScreen = () => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading, users, queriedUsers,currentUsers, isOpenDisplayUser, error} = useSelector(usersSelector);\r\n    const [value, setValue] = useState('');\r\n    const [dbValue, saveToDb] = useState(''); // API call\r\n\r\n       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const debouncedSave = useCallback(\r\n        debounce(nextValue => saveToDb(nextValue), 1000),\r\n        []); // will be created only once initially\r\n\r\n    const handleChange = value => {\r\n        const nextValue = value.trim();\r\n        setValue(nextValue);\r\n\r\n        debouncedSave(nextValue);\r\n    };\r\n\r\n    const cancelSearch = () => {\r\n        saveToDb('');\r\n        dispatch(toggleDisplayCurrentUser(false));\r\n    };\r\n\r\n    useEffect( () => {\r\n        if (dbValue === '') {\r\n            cancelSearch();\r\n\r\n        } else {\r\n           dispatch(fetchQueriedUsers(dbValue));\r\n        }\r\n\r\n        return () => {\r\n            cancelSearch();\r\n        };\r\n    }, [dbValue]);\r\n\r\n    const handleDisplayCurrentUser = useCallback((login, users) => {\r\n        if (login in users && users[login].repos.length === 0 ) {\r\n            dispatch((fetchCurrentUserRepos(login)));\r\n        }\r\n        if (!error) {\r\n            dispatch(toggleDisplayCurrentUser(true));\r\n        }\r\n\r\n\r\n        dispatch(getCurrentUser(login));\r\n    }, [isOpenDisplayUser]);\r\n\r\n    return (\r\n        <Grid item sm={6} xs={12} >\r\n            <Paper className={classes.paper} elevation={3} >\r\n                <Grid container direction=\"column\" className={classes.container} >\r\n                    <Grid item >\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom className={classes.title} >\r\n                            GitHub Searcher\r\n                        </Typography >\r\n                    </Grid >\r\n                    <Grid item >\r\n                        <SearchBar\r\n                            onChange={newValue => handleChange(newValue)}\r\n                            placeholder=\"Search for Users\"\r\n                            onCancelSearch={cancelSearch}\r\n                            onRequestSearch={cancelSearch}\r\n                            className={classes.searchBar}\r\n                        />\r\n                    </Grid >\r\n                    {loading && queriedUsers.length !== 0 && (\r\n                        <Box className={classes.preloader} >\r\n                            <CircularProgress\r\n                                thickness={5}\r\n                                size={36}\r\n                                color=\"secondary\"\r\n                            />\r\n                        </Box >\r\n                    )}\r\n\r\n                    {!loading && queriedUsers.length !== 0 &&  (\r\n                        <Grid item >\r\n                            {queriedUsers.map(user => {\r\n                                return (\r\n                                    <UserItem\r\n                                        key={user.id}\r\n                                        user={user}\r\n                                        userLogin={user.login}\r\n                                        handleDisplayCurrentUser={ handleDisplayCurrentUser}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </Grid >\r\n                    )}\r\n                </Grid >\r\n            </Paper >\r\n        </Grid >\r\n    );\r\n};\r\n\r\nexport default UsersScreen;\r\n\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        // minWidth: pxToRem(340),\r\n        width:'100%',\r\n        // justifyContent: 'center',\r\n        flexWrap: 'nowrap',\r\n        padding: `${pxToRem(120)} ${pxToRem(12)} ${pxToRem(50)} ${pxToRem(12)}`,\r\n        [theme.breakpoints.down('md')]: {\r\n            paddingLeft: pxToRem(8),\r\n            paddingRight: pxToRem(8)\r\n        },\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        padding: pxToRem(18),\r\n        // flexGrow:1,\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    title: {\r\n        fontWeight: 500,\r\n        letterSpacing: pxToRem(0.2)\r\n    },\r\n    searchBar: {\r\n        margin:`${pxToRem(18)} ${pxToRem(36)} ${pxToRem(28)}`,\r\n        marginLeft: pxToRem(36),\r\n        marginRight: pxToRem(36),\r\n    },\r\n    large: {\r\n        width: pxToRem(160),\r\n        height: pxToRem(160),\r\n    },\r\n    preloader:{\r\n        paddingLeft:pxToRem(40)\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","import { pxToRem } from '../../utils/pxToRem';\r\n\r\nconst {makeStyles} = require('@material-ui/core');\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.default,\r\n        margin:pxToRem(6),\r\n        display: 'flex'\r\n    },\r\n    gridContainer: {\r\n        padding: pxToRem(12),\r\n        alignItems: 'center',\r\n    },\r\n    link:{\r\n      width:'100%',\r\n      height:'100%'\r\n    },\r\n    large: {\r\n        width: pxToRem(56),\r\n        height: pxToRem(56),\r\n    },\r\n    userName: {\r\n        textAlign:'left',\r\n        paddingLeft: pxToRem(30),\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: pxToRem(25),\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingLeft: pxToRem(12),\r\n        },\r\n    },\r\n    repos: {\r\n        textAlign: 'right'\r\n    },\r\n    preloader: {\r\n        float:'right'\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport UsersScreen from '../UsersScreen';\r\nimport CurrentUserScreen from '../CurrentUserScreen';\r\n\r\nimport useStyles from './styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { usersSelector } from '../../store/usersReducers';\r\n\r\nconst ScreenContainer = () => {\r\n    const classes = useStyles();\r\n\r\n    const { queriedUsers, isOpenDisplayUser } = useSelector(usersSelector);\r\n\r\n    return (\r\n        // <Container\r\n        //     component=\"main\"\r\n        //     maxWidth={false}\r\n        //     className={classes.container}\r\n        //     style={{minWidth:604}}\r\n        // >\r\n        <Grid container\r\n              component=\"main\"\r\n              spacing={2}\r\n              className={classes.container}\r\n        >\r\n            <UsersScreen />\r\n            {/*{*/}\r\n            {/*    queriedUsers.length !== 0 &&  isOpenDisplayUser                &&*/}\r\n            {/*     <CurrentUserScreen />*/}\r\n            {/*}*/}\r\n\r\n        </Grid >\r\n        // </Container >\r\n    );\r\n};\r\n\r\nexport default ScreenContainer;\r\n","import Header from './components/Header';\r\nimport ScreenContainer from './components/ScreenContainer';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ScreenContainer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { store } from './store'\r\n\r\nimport theme from './theme';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <ThemeProvider theme={theme} >\r\n            <CssBaseline />\r\n            <App />\r\n        </ThemeProvider >\r\n        <ToastContainer />\r\n    </Provider >,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}